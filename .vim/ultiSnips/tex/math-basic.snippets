# get math context
global !p
def math():
	return vim.eval("vimtex#syntax#in_mathzone()") == '1'
endglobal

# ---------------------------------------------------------------
# - functions
# - points
# - parenthesis & brackets
# - proofs
# - summations
# - products
# ---------------------------------------------------------------

# section: Functions & points

## fraction
context "math()"
snippet frac "LaTeX \frac{}{} command" A
\frac{ $1 }{ $2 }$0
endsnippet

## square root
context "math()"
snippet sqrt "squre root" A
\sqrt{ ${1:${VISUAL:}} }$0
endsnippet

## 2D point
context "math()"
snippet pp "make (x,y) point" A
( ${1:x} , ${2:y} )$0
endsnippet

context "math()"
snippet pxy "make variable (x,y)" A
(x, y)$0
endsnippet

## 3D point
context "math()"
snippet tp "make (x,y,z) point" A
( ${1:x}, ${2:y}, ${3:z})$0
endsnippet

context "math()"
snippet tpxyz "make variable (x,y,z)" A
(x, y, z)$0
endsnippet

## function f/h/g...(x,y,z,...)
context "math()"
snippet fx "function f(x)" A
f(x)$0
endsnippet

context "math()"
snippet hx "function f(x)" A
h(x)$0
endsnippet

context "math()"
snippet gx "function f(x)" A
g(x)$0
endsnippet

context "math()"
snippet func "generic f function" A
f\left( $1 \right)$0
endsnippet

context "math()"
snippet hunc "generic h function" A
h\left( $1 \right)$0
endsnippet

context "math()"
snippet gunc "generic g function" A
g\left( $1 \right)$0
endsnippet

## generic logarithm
context "math()"
snippet log "logarithm" A
\log_{ ${1:x} }$0
endsnippet

## common logarithm
context "math()"
snippet logten "log base 10" A
\log_{10}\left( $1 \right\)$0
endsnippet

## base 2 logarithm
context "math()"
snippet logtwo "log base 2" A
\log_{2}\left( ${1:x} \right)$0
endsnippet

## natural logarithm
context "math()"
snippet lnn "gaussian logarithm" A
\ln\left( $1 \right)$0
endsnippet

context "math()"
snippet lnx "ln(x)" A
\ln(x)$0
endsnippet

# ---------------------------------------------------------------

# section: Quickies

## parenthesis
context "math()"
snippet ( "faster and cleaner parenth" A
\left( $1 \right)$0
endsnippet

context "math()"
snippet [ "faster and cleanre bracket" A
\left[ $1 \right]$0
endsnippet

context "math()"
snippet pow "power ^" A
^{ $1 } $0
endsnippet

context "math()"
snippet sub "sub _" A
_{ $1 } $0
endsnippet

context "math()"
snippet implies "implies right arrow" A
\implies$0
endsnippet

context "math()"
snippet notimplies "negated implies arrow" A
\centernot\implies$0
endsnippet

context "math()"
snippet times "times symbol (x)" A
\times$0
endsnippet

context "math()"
snippet inf "infinity" A
\infty$0
endsnippet

context "math()"
snippet ninf "negative infinity" A
-\infty$0
endsnippet

context "math()"
snippet since "upside pyramid of dots meaning since" A
\because$0
endsnippet

context "math()"
snippet then "pyramid of dots meaning therefore" A
\therefore$0
endsnippet

# ---------------------------------------------------------------

# section: Summations

context "math()"
snippet summ "summation" A
\sum_{ ${1:i} = {$2} }^{ ${3:n} }$0
endsnippet

context "math()"
snippet isum "sum over i" A
\sum_{ i = ${1:0} }^{ ${2:n} }$0
endsnippet

context "math()"
snippet xsum "sum over x values" A
\sum_{ x = ${1:0} }^{ ${2:n} }$0
endsnippet

context "math()"
snippet ysum "sum over y values" A
\sum_{ y = ${1:0} }^{ ${2:n} }$0
endsnippet

context "math()"
snippet suminf "infinite sum from zero to inf" A
\sum_0^{\infty}$0
endsnippet

context "math()"
snippet sumover "sum over certain values" A
\sum_{ ${1:values} }$0
endsnippet

# ---------------------------------------------------------------

# section: products

context "math()"
snippet prodd "pi product" A
\prod_{ ${1:i} = ${2:0} }^{ ${3:n} }$0
endsnippet

context "math()"
snippet infprod "infinite product" A
\prod_{1}^{\infty}$0
endsnippet

context "math()"
snippet iprod "prodcut over i values" A
\prod_{i}$0
endsnippet

context "math()"
snippet xprod "product over x values" A
\prod_{x}$0
endsnippet

context "math()"
snippet yprod "prodcut over y values" A
\prod_{x}$0
endsnippet
